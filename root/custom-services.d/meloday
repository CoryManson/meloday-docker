#!/usr/bin/with-contenv bash

# Function to parse time periods from config.yml
parse_time_periods() {
    local config_file="/app/config.yml"
    declare -A periods

    while IFS= read -r line; do
        if [[ $line =~ ^[[:space:]]*([A-Za-z\"\ ]+): ]]; then
            current_period=${BASH_REMATCH[1]}
            current_period=${current_period//\"/}
        elif [[ $line =~ ^[[:space:]]*hours:[[:space:]]*\[(.*)\] ]]; then
            periods[$current_period]="${BASH_REMATCH[1]}"
        fi
    done < "$config_file"

    echo "${!periods[@]}" # Return the keys (time periods)
    echo "${periods[@]}"   # Return the values (hours)
}

# Function to determine the current time period
get_current_time_period() {
    local current_hour=$(date +"%H")
    for period in "${!time_periods[@]}"; do
        IFS=',' read -ra hours <<< "${time_periods[$period]}"
        for hour in "${hours[@]}"; do
            if [[ "$current_hour" -eq "$hour" ]]; then
                echo "$period"
                return
            fi
        done
    done
}

# Load time periods from config.yml
declare -A time_periods
readarray -t keys_and_values < <(parse_time_periods)
IFS=' ' read -ra keys <<< "${keys_and_values[0]}"
IFS=' ' read -ra values <<< "${keys_and_values[1]}"
for i in "${!keys[@]}"; do
    time_periods["${keys[$i]}"]="${values[$i]}"
done

# Main loop to run the script only at the change of a time period
previous_period=""
first_run=true  # Flag to ensure meloday.py runs on first execution
while true; do
    echo "Checking current time period..."  # Added output to indicate the script is running
    current_period=$(get_current_time_period)
    echo "Current time period: $current_period"  # Output the current time period
    echo "Previous time period: $previous_period"  # Output the previous time period
    if [[ "$first_run" = true || "$current_period" != "$previous_period" ]]; then
        echo "Time period changed or first run. Running meloday..."
        python /app/meloday.py -c
        echo "Meloday run complete."
        previous_period="$current_period"
        first_run=false  # Reset the first run flag after execution
    fi
    echo "Sleeping for 10 minutes..."  # Updated output to reflect new sleep period
    echo "---"  # Separator for better readability in logs
    sleep 600  # Check every 10 minutes
done
